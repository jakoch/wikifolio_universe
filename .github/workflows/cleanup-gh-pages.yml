name: Cleanup gh-pages

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  clean-gh-pages:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout gh-pages (shallow)
        uses: actions/checkout@v5
        with:
          ref: gh-pages
          fetch-depth: 1

      - name: Install git-filter-repo
        run: |
          sudo apt-get update
          python3 -m pip install --upgrade --user git-filter-repo
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Determine cutoff and first commit (deepen until found)
        id: find_commit
        run: |
          set -euo pipefail

          # First day of previous month (keep current month)
          CUTOFF_DATE=$(date -d 'last month' +%Y-%m-01)
          echo "Cutoff date: $CUTOFF_DATE"

          if git fetch --help | grep -q -- '--shallow-since'; then
            echo "Attempting git fetch --shallow-since=$CUTOFF_DATE"
            git fetch --shallow-since="$CUTOFF_DATE" origin gh-pages || true
          fi

          DEEPEN_STEP=1000
          MAX_ATTEMPTS=20
          ATTEMPT=0
          FIRST_COMMIT=""

          while [ -z "$FIRST_COMMIT" ] && [ $ATTEMPT -lt $MAX_ATTEMPTS ]; do
            git checkout gh-pages
            git reset --hard origin/gh-pages
            FIRST_COMMIT=$(git log --reverse --since="$CUTOFF_DATE" --format="%H" | head -n 1 || true)
            if [ -n "$FIRST_COMMIT" ]; then break; fi

            ATTEMPT=$((ATTEMPT+1))
            echo "Deepening history (attempt $ATTEMPT)..."
            git fetch --deepen 1000 origin gh-pages || true
          done

          if [ -z "$FIRST_COMMIT" ]; then
            echo "No commits found since $CUTOFF_DATE â€” aborting."
            exit 1
          fi

          echo "first=$FIRST_COMMIT" >> $GITHUB_OUTPUT
          echo "cutoff=$CUTOFF_DATE" >> $GITHUB_OUTPUT

      - name: Rewrite branch history since cutoff
        run: |
          CUTOFF_DATE=${{ steps.find_commit.outputs.cutoff }}
          git filter-repo --force --refs gh-pages --since "$CUTOFF_DATE"

      - name: Cleanup Git objects
        run: |
          git reflog expire --all --expire=now
          git gc --prune=now --aggressive

      - name: Push cleaned branch for review
        run: |
          git checkout -B gh-pages-review
          git push --force origin gh-pages-review
