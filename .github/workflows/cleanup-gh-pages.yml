name: Cleanup gh-pages

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 2 * *'  # Run on 2nd day of each month at 3 AM UTC

permissions:
  contents: write

jobs:
  clean-gh-pages-review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gh-pages (shallow)
        uses: actions/checkout@v5
        with:
          ref: gh-pages
          fetch-depth: 45

      - name: Set git user identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # -----------------------------------------------------------------------------
      # Script Purpose:
      #   Define and export timestamps for GitHub Actions to represent:
      #     1. The start of the current month (UTC)
      #     2. The start of the month corresponding to "yesterday" (UTC)
      #
      # Description:
      #   - FETCH_SINCE: Points to the first day of the month that "yesterday" belongs to.
      #   - MONTH_START: Points to the first day of the current month.
      #   - Both values include "00:00:00" to mark the beginning of the day.
      #   - Outputs are written to $GITHUB_OUTPUT for later workflow steps.
      #
      # Example Output (if today is 2025-10-23 UTC):
      #   FETCH_SINCE=2025-10-01 00:00:00
      #   MONTH_START=2025-10-01 00:00:00
      #
      # Example Output (if today is 2025-11-01 UTC):
      #   FETCH_SINCE=2025-10-01 00:00:00
      #   MONTH_START=2025-11-01 00:00:00
      #
      # -----------------------------------------------------------------------------
      - name: Set fetch cutoff and month start date
        id: dates
        run: |
          FETCH_SINCE="$(date -u -d 'yesterday' '+%Y-%m-01') 00:00:00"
          MONTH_START="$(date -u '+%Y-%m-01') 00:00:00"
          echo "fetch_since=$FETCH_SINCE" >> $GITHUB_OUTPUT
          echo "month_start=$MONTH_START" >> $GITHUB_OUTPUT
          echo "‚úÖ FETCH_SINCE=$FETCH_SINCE, MONTH_START=$MONTH_START"

      - name: Find first commit of current month
        id: find_commit
        run: |
          set -euo pipefail

          # Fetch commits since the start of the month
          # Initial shallow fetch with only recent commits
          git fetch --shallow-since="${{ steps.dates.outputs.fetch_since }}" origin gh-pages

          # Try to find the first commit of the current month
          FIRST_COMMIT=$(git rev-list --reverse --since="${{ steps.dates.outputs.month_start }}" --max-count=1 gh-pages || true)

          # If we didn't find one, deepen the history a few times
          DEPTH=10
          MAX_DEPTH=500

          # Loop to deepen history until we find the first commit or reach max depth
          while [ -z "${FIRST_COMMIT:-}" ] && [ $DEPTH -le $MAX_DEPTH ]; do
            echo "üîç First commit not found yet, deepening history to $DEPTH commits..."
            git fetch --deepen=$DEPTH origin gh-pages
            FIRST_COMMIT=$(git rev-list --reverse --since="${{ steps.dates.outputs.month_start }}" --max-count=1 gh-pages || true)
            DEPTH=$((DEPTH + 10))
          done

          # Exit gracefully if no commits found
          if [ -z "${FIRST_COMMIT:-}" ]; then
            echo "‚ö†Ô∏è No commits found for this month ‚Äî skipping workflow."
            exit 0
          fi

          echo "‚úÖ First commit of this month: $FIRST_COMMIT"
          echo "first_commit=$FIRST_COMMIT" >> $GITHUB_OUTPUT

      - name: Create gh-pages-review branch with monthly commits
        run: |
          set -euo pipefail
          FIRST_COMMIT=${{ steps.find_commit.outputs.first_commit }}
          MONTH_START=${{ steps.dates.outputs.month_start }}

          # Find all commits from this month excluding first
          MONTH_COMMITS=$(git rev-list --reverse --since="$MONTH_START" --skip=1 gh-pages || true)

          # Start orphan branch
          git checkout --orphan gh-pages-review
          git reset --hard

          # Cherry-pick fFirst commit of month
          git cherry-pick $FIRST_COMMIT

          # Cherry-pick the rest of the month
          if [ -n "$MONTH_COMMITS" ]; then
            git cherry-pick $MONTH_COMMITS || { echo "‚ùå Cherry-pick failed"; exit 1; }
          fi

          echo "‚úÖ gh-pages-review branch now contains all commits from $FIRST_COMMIT onward."
          echo "Included $(git rev-list --count HEAD) commits in gh-pages-review."

      - name: Push gh-pages-review branch
        run: |
          git push origin gh-pages-review --force

      #- name: Cleanup local branch
      #  run: |
      #    git checkout gh-pages
      #    git branch -D gh-pages-review || true
