name: Cleanup gh-pages

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 2 * *'  # Run on 2nd day of each month at 3 AM UTC

permissions:
  contents: write

jobs:
  clean-gh-pages-review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gh-pages (shallow)
        uses: actions/checkout@v5
        with:
          ref: gh-pages
          fetch-depth: 32 # needed for --deepen in later steps

      - name: Set git user identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Set monthly cutoff dates
        id: dates
        run: |
            # First day of previous month (since "yesterday" ensures we never use current incomplete month)
            FETCH_SINCE="$(date -u -d 'yesterday' '+%Y-%m-01') 00:00:00"

            # First day of current month (for reference)
            CURRENT_MONTH_START="$(date -u '+%Y-%m-01') 00:00:00"

            # Last second of previous month
            FETCH_UNTIL="$CURRENT_MONTH_START"

            echo "fetch_since=$FETCH_SINCE" >> "$GITHUB_OUTPUT"
            echo "fetch_until=$FETCH_UNTIL" >> "$GITHUB_OUTPUT"
            echo "target_month=${FETCH_SINCE:0:7}" >> "$GITHUB_OUTPUT"  # e.g. "2025-10"

            echo "‚úÖ Processing month: ${FETCH_SINCE:0:7}"
            echo "   Since: $FETCH_SINCE"
            echo "   Until: $FETCH_UNTIL"

      - name: Find first commit of current month
        id: find_commit
        run: |
          set -euo pipefail

          SINCE="${{ steps.dates.outputs.fetch_since }}"
          UNTIL="${{ steps.dates.outputs.fetch_until }}"

          DEPTH=10
          MAX_DEPTH=60
          FIRST_COMMIT=""

          # Loop: fetch incrementally and scan commits
          while [ -z "${FIRST_COMMIT:-}" ] && [ "$DEPTH" -le "$MAX_DEPTH" ]; do
            echo "üîç Fetching next $DEPTH commits..."
            git fetch --deepen=$DEPTH origin gh-pages

            # Get the very first commit in the target month (oldest ‚Üí newest)
            FIRST_COMMIT=$(git log origin/gh-pages --since="$SINCE" --until="$UNTIL" --reverse --format="%H" | head -n1)

            if [ -n "$FIRST_COMMIT" ]; then
                break
            fi

            DEPTH=$((DEPTH + 10))
          done

          # Exit if no commit found
          if [ -z "${FIRST_COMMIT:-}" ]; then
            echo "‚ö†Ô∏è No commits found in target month (${{ steps.dates.outputs.target_month }}) ‚Äî skipping."
            exit 0
          fi

          echo "‚úÖ First commit of ${{ steps.dates.outputs.target_month }}: $FIRST_COMMIT"
          echo "first_commit=$FIRST_COMMIT" >> "$GITHUB_OUTPUT"

      - name: Create gh-pages-review branch with monthly commits
        run: |
          set -euo pipefail
          FIRST_COMMIT=${{ steps.find_commit.outputs.first_commit }}
          MONTH_START=${{ steps.dates.outputs.month_start }}

          # Find all commits from this month excluding first
          MONTH_COMMITS=$(git rev-list --reverse --since="$MONTH_START" --skip=1 gh-pages || true)

          # Start orphan branch
          git checkout --orphan gh-pages-review
          git reset --hard

          # Cherry-pick fFirst commit of month
          git cherry-pick $FIRST_COMMIT

          # Cherry-pick the rest of the month
          if [ -n "$MONTH_COMMITS" ]; then
            git cherry-pick $MONTH_COMMITS || { echo "‚ùå Cherry-pick failed"; exit 1; }
          fi

          echo "‚úÖ gh-pages-review branch now contains all commits from $FIRST_COMMIT onward."
          echo "Included $(git rev-list --count HEAD) commits in gh-pages-review."

      - name: Push gh-pages-review branch
        run: |
          git push origin gh-pages-review --force

      #- name: Cleanup local branch
      #  run: |
      #    git checkout gh-pages
      #    git branch -D gh-pages-review || true
