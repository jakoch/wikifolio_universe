name: Cleanup gh-pages

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 2 * *'  # Run on 2nd day of each month at 3 AM UTC

permissions:
  contents: write

jobs:
  clean-gh-pages-review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gh-pages (shallow)
        uses: actions/checkout@v5
        with:
          ref: gh-pages
          fetch-depth: 50  # shallow, but enough for recent commits

      - name: Set git user identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Fetch enough history for month start
        run: |
          # Fetch all commits since the first day of this month
          git fetch --shallow-since=$(date '+%Y-%m-01') origin gh-pages

      - name: Find first commit of current month
        id: find_commit
        run: |
          set -euo pipefail

          FIRST_COMMIT=$(git rev-list --reverse --since="$(date '+%Y-%m-01 00:00:00')" --max-count=1 gh-pages || true)

          if [ -z "${FIRST_COMMIT:-}" ]; then
            echo "No commits found for this month — skipping workflow."
            exit 0
          fi

          echo "✅ First commit of this month: $FIRST_COMMIT"
          echo "first_commit=$FIRST_COMMIT" >> $GITHUB_OUTPUT

      - name: Create gh-pages-review branch with only monthly commits
        run: |
          set -euo pipefail

          # Find the first commit for the current month (avoid piping to head)
          FIRST=$(git rev-list --reverse --since="$(date '+%Y-%m-01 00:00:00')" --max-count=1 gh-pages || true)

          if [ -z "${FIRST:-}" ]; then
            echo "No commits found for this month — nothing to review."
            exit 0
          fi

          # Create an orphan branch and reset to the tree of FIRST
          git checkout --orphan gh-pages-review
          git reset --hard "$FIRST"

          # Cherry-pick any commits after FIRST from gh-pages onto the orphan branch
          # Use rev-list to collect commits in chronological order
          COMMITS=$(git rev-list --reverse "$FIRST"..gh-pages --since="$(date '+%Y-%m-01 00:00:00')" || true)
          if [ -n "${COMMITS:-}" ]; then
            git cherry-pick $COMMITS || true
          fi

          echo "✅ gh-pages-review branch now contains all commits from $FIRST onward."

      - name: Push gh-pages-review branch
        run: |
          git push origin gh-pages-review --force

      - name: Show summary
        run: |
          echo "✅ gh-pages-review pushed."
          echo "Contains only commits from $(date '+%Y-%m-01') onward."
