language: php
php: 7.3

before_install:
  - sqlite3 -version

install:
  # 7zip
  - sudo apt-get install p7zip-full
  # sqlitebiter
  - wget https://github.com/thombashi/sqlitebiter/releases/download/v0.27.2/sqlitebiter_0.27.2_amd64.deb -O sqlitebiter.deb
  - sudo dpkg -i sqlitebiter.deb
  # wikifolio universe xlsx file
  - wget https://wikifolio.blob.core.windows.net/prod-documents/Investment_Universe.de.xlsx -O Investment_Universe.de.xlsx

before_script:
  - DATE=$(date +%d_%m_%Y_%H%M)
  - SQLITE_FILE="Investment_Universe_$DATE.sqlite"
  - function getFilesize { ls -sh "$1" | awk '{print $1}'; }

script:
  # convert xlsx to sqlite
  - sqlitebiter -v --debug -o $SQLITE_FILE file Investment_Universe.de.xlsx
  # 1. original EXCEL file
  - EXCEL_FILENAME="Investment_Universe.de.xlsx"
  - EXCEL_FILESIZE=$(getFilesize "$EXCEL_FILENAME")
  # ------------------------------------------------------------------------------
  # 1 Rename Columns
  #
  ## the following command needs sqlite3 v3.25.x
  # - sqlite3 sqlite\*.sqlite "alter table Anlageuniversum rename column \"Anlageuniversum(Gruppe)\" to Anlagegruppe;" ".exit"
  # - sqlite3 sqlite\*.sqlite "alter table Anlageuniversum rename column \"Whitelist für institutionelle Produkte – Schweiz\" to WhitelistSchweiz;" ".exit"
  #
  # sqlite export to csv
  - sqlite3 -header -csv $SQLITE_FILE "select * from Anlageuniversum;" > $SQLITE_FILE.csv
  # sed replacement on first line of file: 
  # change column name "Anlageuniversum(Gruppe)" to "Anlagegruppe"
  - sed -i '1!b;s/Anlageuniversum(Gruppe)/Anlagegruppe/' $SQLITE_FILE.csv
  # sed replacement on first line of file:
  # change column name "Whitelist für institutionelle Produkte – Schweiz" to "WhitelistSchweiz"
  - sed -i '1!b;s/Whitelist für institutionelle Produkte – Schweiz/WhitelistSchweiz/' $SQLITE_FILE.csv
  # cleanup: delete original sqlite file, before importing to same filename
  - rm $SQLITE_FILE 
  # show folder
  - ls -lash
  # sqlite import csv file -> create sqlite file
  - sqlite3 -csv $SQLITE_FILE ".import $SQLITE_FILE.csv Anlageuniversum"
  # cleanup: remove tmp csv file
  - rm $SQLITE_FILE.csv
  # ------------------------------------------------------------------------------
  # 2. compress sqlite, get filesize
  - SQLITE_ZIP_FILENAME=$SQLITE_FILE.zip
  - 7z a -mx9 $SQLITE_ZIP_FILENAME $SQLITE_FILE 
  - SQLITE_ZIP_FILESIZE=$(getFilesize "$SQLITE_ZIP_FILENAME")
  # show folder
  - ls -lash
  # write new README
  - echo -n > README.md
  - echo -e '# Das gesamte [wikifolio.com Anlageuniversum](https://www.wikifolio.com/de/de/hilfe/tutorials-trader/handel-hinweise/anlageuniversum) im Überblick:\n' >> README.md
  - echo -e '\n## Excel\n' >> README.md
  - echo -e '\n- [Investment_Universe.de.xlsx](https://wikifolio.blob.core.windows.net/prod-documents/Investment_Universe.de.xlsx) ('$EXCEL_FILESIZE')\n' >> README.md
  - echo -e '\n## SQLite\n' >> README.md
  - echo -e '\n- ['$SQLITE_ZIP_FILENAME']('$SQLITE_ZIP_FILENAME') ('$SQLITE_ZIP_FILESIZE')\n' >> README.md
  # ------------------------------------------------------------------------------
  # 2 Create Table for each SecurityType 
  - sqlite3 $SQLITE_FILE < query/create-tables-for-securitytypes.sql
  # ------------------------------------------------------------------------------
  # 3 Export Database for each SecurityType Table
  #
  - echo -e '\n#### By SecurityType\n' >> README.md
  - |
    for SECURITYTYPE in $( sqlite3 $SQLITE_FILE "select distinct SecurityType from Anlageuniversum" ); 
    do 
      echo SecurityType: $SECURITYTYPE;
      echo Exporting to CSV file;
      sqlite3 -header -csv $SQLITE_FILE "select * from $SECURITYTYPE;" > $SECURITYTYPE.csv;
      echo Creating SQLite for CSV file;
      sqlite3 -csv $SECURITYTYPE-$DATE.sqlite ".import $SECURITYTYPE.csv $SECURITYTYPE";
      echo Removing CSV file;
      rm $SECURITYTYPE.csv;
      echo Create ZIP file;
      declare -A ZIP_FILENAME=();
      ZIP_FILENAME[$SECURITYTYPE]=$SECURITYTYPE-$DATE.sqlite.zip
      7z a -mx9 ${ZIP_FILENAME[$SECURITYTYPE]} $SECURITYTYPE-$DATE.sqlite; 
      declare -A ZIP_FILESIZE=();
      declare ZIP_FILESIZE[$SECURITYTYPE]=$(getFilesize ${ZIP_FILENAME[$SECURITYTYPE]});
      echo Append README.md;
      echo -e '\n- ['${ZIP_FILENAME[$SECURITYTYPE]}']('${ZIP_FILENAME[$SECURITYTYPE]}') ('${ZIP_FILESIZE[$SECURITYTYPE]}')\n' >> README.md;
    done;
  # ------------------------------------------------------------------------------

after_success:
  - ./publish.sh 
env:
  global:
  - secure: iaCDp+838NhaUlgFcIBqCzp3d20fZFAc2UuPyGV6k85qRuhnnB3fMV9AhX64AumrFUq9Cw3H/x1RTCSMQ0o8jZgmqTWMJkIueTRJ7IXhm68gVUy8D2jD/fveK7XBywAtKAhC9nxUu/qv4aY4C30fP7wIYS4UvDG1tW/aNVq+gNiqv7o6rU7rJJYfeN6tTj+W7LSjcsuxXMihXnGIknV8ntmZdJKcEf1/vRFz+/ucBVqdxD/PZq8aO/B9GbZ3mK8Rhj0ecd3gMJCRIOCiVMyLE/4seEahKxDyMBg0VQikUlmd8RSmzF9MGEHkwkZPTV6bKEygGhqIYCTVIP7c3czk8U6evyKCfMr6XX0/J0cBFYavn5GYBtmB83QBlPtFo9SBtGsFkbmeLVqrQ4KOlcnkYdf5z1YAIw+o5zKlY2WWy/RaUXKSpV7KnfcqyPEf5OU1XRHKJnnxY4BLvBNhRxeeSN61JphSYMzjSbs9fFHRHZ6c0e8NcExBlvy2GHmNTN0ihxtse1CPUetNB4cLuN3nw+ux5kGIYm5cnIZy3H7LGseBLioTKjFFJ5eU80DXZmlUWrAP4Qt2WIsFo+nQVnQEvMKRobJyTwBErmbvZNofsTcmroTLWkasUhJx05SnxWTywxgPEQiI+I5IubC8TEAwpYecJFCJZfd9E2eZHGDfhmo=
